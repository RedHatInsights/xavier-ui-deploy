{"version":3,"sources":["webpack:///./src/SmartComponents/DeleteDialog/DeleteDialog.scss","webpack:///./src/SmartComponents/DeleteDialog/DeleteDialog.scss?1ac0","webpack:///./src/SmartComponents/DeleteDialog/DeleteDialog.tsx","webpack:///./src/SmartComponents/DeleteDialog/index.tsx"],"names":["module","exports","__webpack_require__","push","i","content","options","hmr","transform","insertInto","undefined","update","locals","hot","accept","newContent","a","b","key","idx","Error","dispose","DeleteDialogBase","props","classCallCheck_default","this","possibleConstructorReturn_default","getPrototypeOf_default","call","_this$props","type","name","onDelete","onCancel","isOpen","isProcessing","isError","react_default","createElement","Modal","isSmall","title","concat","onClose","actions","Button","isDisabled","variant","ButtonVariant","danger","onClick","link","React","Component","connect","state","_state$dialogDeleteSt","dialogDeleteState"],"mappings":"8EAAAA,EAAAC,QAA2BC,EAAQ,EAARA,EAA8D,IAEzFC,KAAA,CAAcH,EAAAI,EAAS,+FAA6F,0BCDpH,IAAAC,EAAcH,EAAQ,KAEtB,iBAAAG,MAAA,EAA4CL,EAAAI,EAASC,EAAA,MAOrD,IAAAC,EAAA,CAAeC,KAAA,EAEfC,eAPAA,EAQAC,gBAAAC,GAEAC,EAAaT,EAAQ,EAARA,CAA8DG,EAAAC,GAE3ED,EAAAO,SAAAZ,EAAAC,QAAAI,EAAAO,QAGAZ,EAAAa,IAAAC,OAAmB,IAA8H,WACjJ,IAAAC,EAAmBb,EAAQ,KAiB3B,GAfA,iBAAAa,MAAA,EAAoDf,EAAAI,EAASW,EAAA,OAE7D,SAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAA,EAEA,IAAAD,KAAAF,EAAA,CACA,IAAAC,GAAAD,EAAAE,KAAAD,EAAAC,GAAA,SACAC,IAGA,IAAAD,KAAAD,EAAAE,IAEA,WAAAA,EAVA,CAWGd,EAAAO,OAAAG,EAAAH,QAEH,UAAAQ,MAAA,uDAEAT,EAAAI,KAGAf,EAAAa,IAAAQ,QAAA,WAAgCV,kLCwBjBW,sBAjDX,SAAAA,EAAYC,GAAc,OAAAC,IAAAC,KAAAH,GAAAI,IAAAD,KAAAE,IAAAL,GAAAM,KAAAH,KAChBF,0DAGD,IAAAM,EASDJ,KAAKF,MAPLO,EAFCD,EAEDC,KACAC,EAHCF,EAGDE,KACAC,EAJCH,EAIDG,SACAC,EALCJ,EAKDI,SACAC,EANCL,EAMDK,OACAC,EAPCN,EAODM,aACAC,EARCP,EAQDO,QAGJ,OACIC,EAAArB,EAAAsB,cAACC,EAAA,EAAD,CACIC,SAAO,EACPC,MAAK,UAAAC,OAAaX,EAAb,KACLY,QAAUV,EACVC,OAASA,EACTU,QAAU,CACNP,EAAArB,EAAAsB,cAACO,EAAA,EAAD,CACI3B,IAAI,UACJ4B,WAAaX,EACbY,QAAUC,IAAcC,OACxBC,QAAUlB,GAJd,aAAAU,OAMgBZ,IAEhBO,EAAArB,EAAAsB,cAACO,EAAA,EAAD,CACI3B,IAAI,SACJ4B,WAAaX,EACbY,QAAUC,IAAcG,KACxBD,QAAUjB,GAJd,YAUFG,EAAO,+CAAAM,OAC4CZ,EAD5C,6CAAAY,OAEqCZ,EAFrC,uDAAAY,OAE+FZ,EAF/F,yBA1CMsB,IAAMC,YCctBC,4BA1BS,SAACC,GAAuB,IAAAC,EAWxCD,EATAE,kBAUJ,MAAO,CACHvB,OAbwCsB,EAGpCtB,OAWJC,aAdwCqB,EAIpCrB,aAWJC,QAfwCoB,EAKpCpB,QAWJL,KAhBwCyB,EAMpCzB,KAWJD,KAjBwC0B,EAOpC1B,KAWJE,SAlBwCwB,EAQpCxB,SAWJC,SAnBwCuB,EASpCvB,WAce,GAGZqB,CAA6ChC","file":"js/DeleteDialog-4584b7f2062a816e6a6f.js","sourcesContent":["exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".pf-c-modal-box__footer > .pf-c-button:first-of-type {\\n  margin-left: unset !important; }\\n\", \"\"]);\n\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./DeleteDialog.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./DeleteDialog.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./DeleteDialog.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import { Button, Modal, ButtonVariant } from '@patternfly/react-core';\nimport React from 'react';\nimport './DeleteDialog.scss';\n\ninterface Props {\n  onDelete: () => void;\n  onCancel: any;\n  isOpen: boolean;\n  isProcessing: boolean;\n  isError: boolean;\n  name: string;\n  type: string;\n}\n\ninterface State { }\n\nclass DeleteDialogBase extends React.Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n    }\n\n    render() {\n        const {\n            type,\n            name,\n            onDelete,\n            onCancel,\n            isOpen,\n            isProcessing,\n            isError\n        } = this.props;\n\n        return (\n            <Modal\n                isSmall\n                title={ `Delete ${name}?` }\n                onClose={ onCancel }\n                isOpen={ isOpen }\n                actions={ [\n                    <Button\n                        key=\"confirm\"\n                        isDisabled={ isProcessing }\n                        variant={ ButtonVariant.danger }\n                        onClick={ onDelete }\n                    >\n                        Delete { `${type}` }\n                    </Button>,\n                    <Button\n                        key=\"cancel\"\n                        isDisabled={ isProcessing }\n                        variant={ ButtonVariant.link }\n                        onClick={ onCancel }\n                    >\n                        Cancel\n                    </Button>\n                ] }\n            >\n                { isError\n                    ? `Ops! There was a problem while deleting the ${type}.`\n                    : `Are you sure you want to delete this ${type}? This action will remove any data related to this ${type} permanently.` }\n            </Modal>\n        );\n    }\n\n}\n\nexport default DeleteDialogBase;\n","import { connect } from 'react-redux';\nimport { GlobalState } from '../../models/state';\nimport DeleteDialogBase from './DeleteDialog';\n\nconst mapStateToProps = (state: GlobalState) => {\n    const {\n        dialogDeleteState: {\n            isOpen,\n            isProcessing,\n            isError,\n            name,\n            type,\n            onDelete,\n            onCancel\n        }\n    } = state;\n    return {\n        isOpen,\n        isProcessing,\n        isError,\n        name,\n        type,\n        onDelete,\n        onCancel\n    };\n};\n\nconst mapDispatchToProps = {\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteDialogBase);\n"],"sourceRoot":""}