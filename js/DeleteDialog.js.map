{"version":3,"sources":["webpack:///./src/SmartComponents/DeleteDialog/DeleteDialog.scss","webpack:///./src/SmartComponents/DeleteDialog/DeleteDialog.scss?8482","webpack:///./src/SmartComponents/DeleteDialog/DeleteDialog.tsx","webpack:///./src/SmartComponents/DeleteDialog/index.tsx"],"names":["module","exports","push","i","content","options","transform","undefined","update","locals","hot","accept","newContent","a","b","key","idx","Error","dispose","props","render","type","name","onDelete","onCancel","isOpen","isProcessing","isError","Modal","variant","small","title","onClose","className","actions","Button","isDisabled","danger","onClick","link","Component","state","dialogDeleteState"],"mappings":"8EAAUA,EAAOC,QAAU,EAAQ,EAAR,EAAgE,IAEnFC,KAAK,CAACF,EAAOG,EAAI,+FAAgG,M,oBCDzH,IAAIC,EAAU,EAAQ,KAEA,iBAAZA,IAAsBA,EAAU,CAAC,CAACJ,EAAOG,EAAIC,EAAS,MAOhE,IAAIC,EAAU,CAAC,KAAM,EAErB,eAPIC,EAQJ,gBAAqBC,GAEjBC,EAAS,EAAQ,GAAR,CAAgEJ,EAASC,GAEnFD,EAAQK,SAAQT,EAAOC,QAAUG,EAAQK,QAG3CT,EAAOU,IAAIC,OAAO,KAAsH,WACvI,IAAIC,EAAa,EAAQ,KAiBzB,GAfyB,iBAAfA,IAAyBA,EAAa,CAAC,CAACZ,EAAOG,EAAIS,EAAY,OAE3D,SAASC,EAAGC,GACzB,IAAIC,EAAKC,EAAM,EAEf,IAAID,KAAOF,EAAG,CACb,IAAIC,GAAKD,EAAEE,KAASD,EAAEC,GAAM,OAAO,EACnCC,IAGD,IAAID,KAAOD,EAAGE,IAEd,OAAe,IAARA,EAVK,CAWXZ,EAAQK,OAAQG,EAAWH,QAEjB,MAAM,IAAIQ,MAAM,uDAE5BT,EAAOI,MAGRZ,EAAOU,IAAIQ,SAAQ,WAAaV,Q,mZCyBlB,EApDf,YAEI,WAAYW,G,OACR,YAAMA,IAAM,KA+CpB,OAlD+B,OAMpB,YAAAC,OAAP,WACU,iBACFC,EAAA,EAAAA,KACAC,EAAA,EAAAA,KACAC,EAAA,EAAAA,SACAC,EAAA,EAAAA,SACAC,EAAA,EAAAA,OACAC,EAAA,EAAAA,aACAC,EAAA,EAAAA,QAGJ,OACI,kBAACC,EAAA,EAAK,CACFC,QAAUD,EAAA,EAAaE,MACvBC,MAAQ,UAAUT,EAAI,IACtBU,QAAUR,EACVC,OAASA,EACTQ,UAAU,kBACVC,QAAU,CACN,kBAACC,EAAA,EAAM,CACHpB,IAAI,UACJqB,WAAaV,EACbG,QAAUM,EAAA,EAAcE,OACxBC,QAAUf,G,UAED,GAAGF,GAEhB,kBAACc,EAAA,EAAM,CACHpB,IAAI,SACJqB,WAAaV,EACbG,QAAUM,EAAA,EAAcI,KACxBD,QAAUd,GAAQ,YAMxBG,EACI,+CAA+CN,EAAI,IACnD,wCAAwCA,EAAI,sDAAsDA,EAAI,kBAK5H,EAlDA,CAA+B,IAAMmB,WCctB,6BA1BS,SAACC,GAEjB,QAAAC,kBAUJ,MAAO,CACHjB,OAVI,EAAAA,OAWJC,aAVI,EAAAA,aAWJC,QAVI,EAAAA,QAWJL,KAVI,EAAAA,KAWJD,KAVI,EAAAA,KAWJE,SAVI,EAAAA,SAWJC,SAVI,EAAAA,YAce,GAGZ,CAA6C","file":"js/DeleteDialog.js","sourcesContent":["exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".pf-c-modal-box__footer > .pf-c-button:first-of-type {\\n  margin-left: unset !important; }\\n\", \"\"]);\n\n","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!./DeleteDialog.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!./DeleteDialog.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!./DeleteDialog.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import React from 'react';\nimport { Button, Modal, ButtonVariant, ModalVariant } from '@patternfly/react-core';\nimport './DeleteDialog.scss';\n\ninterface Props {\n  onDelete: () => void;\n  onCancel: any;\n  isOpen: boolean;\n  isProcessing: boolean;\n  isError: boolean;\n  name: string;\n  type: string;\n}\n\ninterface State { }\n\nclass DeleteDialogBase extends React.Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n    }\n\n    public render() {\n        const {\n            type,\n            name,\n            onDelete,\n            onCancel,\n            isOpen,\n            isProcessing,\n            isError\n        } = this.props;\n\n        return (\n            <Modal\n                variant={ ModalVariant.small }\n                title={ `Delete ${name}?` }\n                onClose={ onCancel }\n                isOpen={ isOpen }\n                className=\"ma-delete-modal\"\n                actions={ [\n                    <Button\n                        key=\"confirm\"\n                        isDisabled={ isProcessing }\n                        variant={ ButtonVariant.danger }\n                        onClick={ onDelete }\n                    >\n                        Delete { `${type}` }\n                    </Button>,\n                    <Button\n                        key=\"cancel\"\n                        isDisabled={ isProcessing }\n                        variant={ ButtonVariant.link }\n                        onClick={ onCancel }\n                    >\n                        Cancel\n                    </Button>\n                ] }\n            >\n                { isError\n                    ? `Ops! There was a problem while deleting the ${type}.`\n                    : `Are you sure you want to delete this ${type}? This action will remove any data related to this ${type} permanently.` }\n            </Modal>\n        );\n    }\n\n}\n\nexport default DeleteDialogBase;\n","import { connect } from 'react-redux';\nimport { GlobalState } from '../../models/state';\nimport DeleteDialogBase from './DeleteDialog';\n\nconst mapStateToProps = (state: GlobalState) => {\n    const {\n        dialogDeleteState: {\n            isOpen,\n            isProcessing,\n            isError,\n            name,\n            type,\n            onDelete,\n            onCancel\n        }\n    } = state;\n    return {\n        isOpen,\n        isProcessing,\n        isError,\n        name,\n        type,\n        onDelete,\n        onCancel\n    };\n};\n\nconst mapDispatchToProps = {\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteDialogBase);\n"],"sourceRoot":""}